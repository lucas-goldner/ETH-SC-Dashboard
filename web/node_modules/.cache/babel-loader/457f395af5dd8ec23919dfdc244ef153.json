{"ast":null,"code":"var _jsxFileName = \"/Users/lucasgoldner/Dev/React/material-kit-react/src/components/NavSection.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom'; // material\n\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, List, Collapse, ListItemText, ListItemIcon, ListItemButton } from '@mui/material'; //\n\nimport Iconify from './Iconify'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListItemStyle = styled(props => /*#__PURE__*/_jsxDEV(ListItemButton, {\n  disableGutters: true,\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 41\n}, this))(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    height: 48,\n    position: 'relative',\n    textTransform: 'capitalize',\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(2.5),\n    color: theme.palette.text.secondary,\n    '&:before': {\n      top: 0,\n      right: 0,\n      width: 3,\n      bottom: 0,\n      content: \"''\",\n      display: 'none',\n      position: 'absolute',\n      borderTopLeftRadius: 4,\n      borderBottomLeftRadius: 4,\n      backgroundColor: theme.palette.primary.main\n    }\n  };\n});\nconst ListItemIconStyle = styled(ListItemIcon)({\n  width: 22,\n  height: 22,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n}); // ----------------------------------------------------------------------\n\nNavItem.propTypes = {\n  item: PropTypes.object,\n  active: PropTypes.func\n};\n\nfunction NavItem(_ref2) {\n  _s();\n\n  let {\n    item,\n    active\n  } = _ref2;\n  const theme = useTheme();\n  const isActiveRoot = active(item.path);\n  const {\n    title,\n    path,\n    icon,\n    info,\n    children\n  } = item;\n  const [open, setOpen] = useState(isActiveRoot);\n\n  const handleOpen = () => {\n    setOpen(prev => !prev);\n  };\n\n  const activeRootStyle = {\n    color: 'primary.main',\n    fontWeight: 'fontWeightMedium',\n    bgcolor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:before': {\n      display: 'block'\n    }\n  };\n  const activeSubStyle = {\n    color: 'text.primary',\n    fontWeight: 'fontWeightMedium'\n  };\n\n  if (children) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ListItemStyle, {\n        onClick: handleOpen,\n        sx: { ...(isActiveRoot && activeRootStyle)\n        },\n        children: [/*#__PURE__*/_jsxDEV(ListItemIconStyle, {\n          children: icon && icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n          disableTypography: true,\n          primary: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), info && info, /*#__PURE__*/_jsxDEV(Iconify, {\n          icon: open ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill',\n          sx: {\n            width: 16,\n            height: 16,\n            ml: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        in: open,\n        timeout: \"auto\",\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          component: \"div\",\n          disablePadding: true,\n          children: children.map(item => {\n            const {\n              title,\n              path\n            } = item;\n            const isActiveSub = active(path);\n            return /*#__PURE__*/_jsxDEV(ListItemStyle, {\n              component: RouterLink,\n              to: path,\n              sx: { ...(isActiveSub && activeSubStyle)\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIconStyle, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  component: \"span\",\n                  sx: {\n                    width: 4,\n                    height: 4,\n                    display: 'flex',\n                    borderRadius: '50%',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    bgcolor: 'text.disabled',\n                    transition: theme => theme.transitions.create('transform'),\n                    ...(isActiveSub && {\n                      transform: 'scale(2)',\n                      bgcolor: 'primary.main'\n                    })\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                disableTypography: true,\n                primary: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }, this)]\n            }, title, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(ListItemStyle, {\n    component: RouterLink,\n    to: path,\n    sx: { ...(isActiveRoot && activeRootStyle)\n    },\n    children: [/*#__PURE__*/_jsxDEV(ListItemIconStyle, {\n      children: icon && icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n      disableTypography: true,\n      primary: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), info && info]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavItem, \"+5gExBM4r++Rgbg1TxAFgi8n6zo=\", false, function () {\n  return [useTheme];\n});\n\n_c = NavItem;\nNavSection.propTypes = {\n  navConfig: PropTypes.array\n};\nexport default function NavSection(_ref3) {\n  _s2();\n\n  let {\n    navConfig,\n    ...other\n  } = _ref3;\n  const {\n    pathname\n  } = useLocation();\n\n  const match = path => path ? !!matchPath({\n    path,\n    end: false\n  }, pathname) : false;\n\n  return /*#__PURE__*/_jsxDEV(Box, { ...other,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      disablePadding: true,\n      children: navConfig.map(item => /*#__PURE__*/_jsxDEV(NavItem, {\n        item: item,\n        active: match\n      }, item.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(NavSection, \"qVMqkCpYCjknUqSjfMln5RFSkbo=\", false, function () {\n  return [useLocation];\n});\n\n_c2 = NavSection;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavItem\");\n$RefreshReg$(_c2, \"NavSection\");","map":{"version":3,"sources":["/Users/lucasgoldner/Dev/React/material-kit-react/src/components/NavSection.js"],"names":["useState","PropTypes","NavLink","RouterLink","matchPath","useLocation","alpha","useTheme","styled","Box","List","Collapse","ListItemText","ListItemIcon","ListItemButton","Iconify","ListItemStyle","props","theme","typography","body2","height","position","textTransform","paddingLeft","spacing","paddingRight","color","palette","text","secondary","top","right","width","bottom","content","display","borderTopLeftRadius","borderBottomLeftRadius","backgroundColor","primary","main","ListItemIconStyle","alignItems","justifyContent","NavItem","propTypes","item","object","active","func","isActiveRoot","path","title","icon","info","children","open","setOpen","handleOpen","prev","activeRootStyle","fontWeight","bgcolor","action","selectedOpacity","activeSubStyle","ml","map","isActiveSub","borderRadius","transition","transitions","create","transform","NavSection","navConfig","array","other","pathname","match","end"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom';\n// material\nimport { alpha, useTheme, styled } from '@mui/material/styles';\nimport { Box, List, Collapse, ListItemText, ListItemIcon, ListItemButton } from '@mui/material';\n//\nimport Iconify from './Iconify';\n\n// ----------------------------------------------------------------------\n\nconst ListItemStyle = styled((props) => <ListItemButton disableGutters {...props} />)(\n  ({ theme }) => ({\n    ...theme.typography.body2,\n    height: 48,\n    position: 'relative',\n    textTransform: 'capitalize',\n    paddingLeft: theme.spacing(5),\n    paddingRight: theme.spacing(2.5),\n    color: theme.palette.text.secondary,\n    '&:before': {\n      top: 0,\n      right: 0,\n      width: 3,\n      bottom: 0,\n      content: \"''\",\n      display: 'none',\n      position: 'absolute',\n      borderTopLeftRadius: 4,\n      borderBottomLeftRadius: 4,\n      backgroundColor: theme.palette.primary.main\n    }\n  })\n);\n\nconst ListItemIconStyle = styled(ListItemIcon)({\n  width: 22,\n  height: 22,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center'\n});\n\n// ----------------------------------------------------------------------\n\nNavItem.propTypes = {\n  item: PropTypes.object,\n  active: PropTypes.func\n};\n\nfunction NavItem({ item, active }) {\n  const theme = useTheme();\n  const isActiveRoot = active(item.path);\n  const { title, path, icon, info, children } = item;\n  const [open, setOpen] = useState(isActiveRoot);\n\n  const handleOpen = () => {\n    setOpen((prev) => !prev);\n  };\n\n  const activeRootStyle = {\n    color: 'primary.main',\n    fontWeight: 'fontWeightMedium',\n    bgcolor: alpha(theme.palette.primary.main, theme.palette.action.selectedOpacity),\n    '&:before': { display: 'block' }\n  };\n\n  const activeSubStyle = {\n    color: 'text.primary',\n    fontWeight: 'fontWeightMedium'\n  };\n\n  if (children) {\n    return (\n      <>\n        <ListItemStyle\n          onClick={handleOpen}\n          sx={{\n            ...(isActiveRoot && activeRootStyle)\n          }}\n        >\n          <ListItemIconStyle>{icon && icon}</ListItemIconStyle>\n          <ListItemText disableTypography primary={title} />\n          {info && info}\n          <Iconify\n            icon={open ? 'eva:arrow-ios-downward-fill' : 'eva:arrow-ios-forward-fill'}\n            sx={{ width: 16, height: 16, ml: 1 }}\n          />\n        </ListItemStyle>\n\n        <Collapse in={open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            {children.map((item) => {\n              const { title, path } = item;\n              const isActiveSub = active(path);\n\n              return (\n                <ListItemStyle\n                  key={title}\n                  component={RouterLink}\n                  to={path}\n                  sx={{\n                    ...(isActiveSub && activeSubStyle)\n                  }}\n                >\n                  <ListItemIconStyle>\n                    <Box\n                      component=\"span\"\n                      sx={{\n                        width: 4,\n                        height: 4,\n                        display: 'flex',\n                        borderRadius: '50%',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        bgcolor: 'text.disabled',\n                        transition: (theme) => theme.transitions.create('transform'),\n                        ...(isActiveSub && {\n                          transform: 'scale(2)',\n                          bgcolor: 'primary.main'\n                        })\n                      }}\n                    />\n                  </ListItemIconStyle>\n                  <ListItemText disableTypography primary={title} />\n                </ListItemStyle>\n              );\n            })}\n          </List>\n        </Collapse>\n      </>\n    );\n  }\n\n  return (\n    <ListItemStyle\n      component={RouterLink}\n      to={path}\n      sx={{\n        ...(isActiveRoot && activeRootStyle)\n      }}\n    >\n      <ListItemIconStyle>{icon && icon}</ListItemIconStyle>\n      <ListItemText disableTypography primary={title} />\n      {info && info}\n    </ListItemStyle>\n  );\n}\n\nNavSection.propTypes = {\n  navConfig: PropTypes.array\n};\n\nexport default function NavSection({ navConfig, ...other }) {\n  const { pathname } = useLocation();\n  const match = (path) => (path ? !!matchPath({ path, end: false }, pathname) : false);\n\n  return (\n    <Box {...other}>\n      <List disablePadding>\n        {navConfig.map((item) => (\n          <NavItem key={item.title} item={item} active={match} />\n        ))}\n      </List>\n    </Box>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}