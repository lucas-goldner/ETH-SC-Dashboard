{"ast":null,"code":"var _jsxFileName = \"/Users/lucasgoldner/Dev/React/material-kit-react/web/src/layouts/dashboard/DashboardSidebar.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom'; // material\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material'; // mocks_\n\nimport account from '../../_mocks_/account'; // hooks\n\nimport useResponsive from '../../hooks/useResponsive'; // components\n\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection'; //\n\nimport sidebarConfig from './SidebarConfig'; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DRAWER_WIDTH = 280;\nconst RootStyle = styled('div')(_ref => {\n  let {\n    theme\n  } = _ref;\n  return {\n    [theme.breakpoints.up('lg')]: {\n      flexShrink: 0,\n      width: DRAWER_WIDTH\n    }\n  };\n});\nconst AccountStyle = styled('div')(_ref2 => {\n  let {\n    theme\n  } = _ref2;\n  return {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(2, 2.5),\n    borderRadius: Number(theme.shape.borderRadius) * 1.5,\n    backgroundColor: theme.palette.grey[50012]\n  };\n}); // ----------------------------------------------------------------------\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\nexport default function DashboardSidebar(_ref3) {\n  _s();\n\n  let {\n    isOpenSidebar,\n    onCloseSidebar\n  } = _ref3;\n  const {\n    pathname\n  } = useLocation();\n  const isDesktop = useResponsive('up', 'lg');\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pathname]);\n\n  const renderContent = /*#__PURE__*/_jsxDEV(Scrollbar, {\n    sx: {\n      height: 1,\n      '& .simplebar-content': {\n        height: 1,\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 2.5,\n        py: 3,\n        display: 'inline-flex'\n      },\n      children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavSection, {\n      navConfig: sidebarConfig\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    children: [!isDesktop && /*#__PURE__*/_jsxDEV(Drawer, {\n      open: isOpenSidebar,\n      onClose: onCloseSidebar,\n      PaperProps: {\n        sx: {\n          width: DRAWER_WIDTH\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), isDesktop && /*#__PURE__*/_jsxDEV(Drawer, {\n      open: true,\n      variant: \"persistent\",\n      PaperProps: {\n        sx: {\n          width: DRAWER_WIDTH,\n          bgcolor: 'background.default',\n          borderRightStyle: 'dashed'\n        }\n      },\n      children: renderContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardSidebar, \"/F+VcMe/8jp19QNyhHri09thqJ4=\", false, function () {\n  return [useLocation, useResponsive];\n});\n\n_c = DashboardSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardSidebar\");","map":{"version":3,"sources":["/Users/lucasgoldner/Dev/React/material-kit-react/web/src/layouts/dashboard/DashboardSidebar.js"],"names":["PropTypes","useEffect","Link","RouterLink","useLocation","styled","Box","Button","Drawer","Typography","Avatar","Stack","account","useResponsive","Logo","Scrollbar","NavSection","sidebarConfig","DRAWER_WIDTH","RootStyle","theme","breakpoints","up","flexShrink","width","AccountStyle","display","alignItems","padding","spacing","borderRadius","Number","shape","backgroundColor","palette","grey","DashboardSidebar","propTypes","isOpenSidebar","bool","onCloseSidebar","func","pathname","isDesktop","renderContent","height","flexDirection","px","py","sx","bgcolor","borderRightStyle"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAI,IAAIC,UAAjB,EAA6BC,WAA7B,QAAgD,kBAAhD,C,CACA;;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,SAASC,GAAT,EAAcJ,IAAd,EAAoBK,MAApB,EAA4BC,MAA5B,EAAoCC,UAApC,EAAgDC,MAAhD,EAAwDC,KAAxD,QAAqE,eAArE,C,CACA;;AACA,OAAOC,OAAP,MAAoB,uBAApB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,UAAP,MAAuB,6BAAvB,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B,C,CAEA;;;AAEA,MAAMC,YAAY,GAAG,GAArB;AAEA,MAAMC,SAAS,GAAGd,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEe,IAAAA;AAAF,GAAD;AAAA,SAAgB;AAC9C,KAACA,KAAK,CAACC,WAAN,CAAkBC,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BC,MAAAA,UAAU,EAAE,CADgB;AAE5BC,MAAAA,KAAK,EAAEN;AAFqB;AADgB,GAAhB;AAAA,CAAd,CAAlB;AAOA,MAAMO,YAAY,GAAGpB,MAAM,CAAC,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEe,IAAAA;AAAF,GAAD;AAAA,SAAgB;AACjDM,IAAAA,OAAO,EAAE,MADwC;AAEjDC,IAAAA,UAAU,EAAE,QAFqC;AAGjDC,IAAAA,OAAO,EAAER,KAAK,CAACS,OAAN,CAAc,CAAd,EAAiB,GAAjB,CAHwC;AAIjDC,IAAAA,YAAY,EAAEC,MAAM,CAACX,KAAK,CAACY,KAAN,CAAYF,YAAb,CAAN,GAAmC,GAJA;AAKjDG,IAAAA,eAAe,EAAEb,KAAK,CAACc,OAAN,CAAcC,IAAd,CAAmB,KAAnB;AALgC,GAAhB;AAAA,CAAd,CAArB,C,CAQA;;AAEAC,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BC,EAAAA,aAAa,EAAEtC,SAAS,CAACuC,IADE;AAE3BC,EAAAA,cAAc,EAAExC,SAAS,CAACyC;AAFC,CAA7B;AAKA,eAAe,SAASL,gBAAT,QAA6D;AAAA;;AAAA,MAAnC;AAAEE,IAAAA,aAAF;AAAiBE,IAAAA;AAAjB,GAAmC;AAC1E,QAAM;AAAEE,IAAAA;AAAF,MAAetC,WAAW,EAAhC;AAEA,QAAMuC,SAAS,GAAG9B,aAAa,CAAC,IAAD,EAAO,IAAP,CAA/B;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIqC,aAAJ,EAAmB;AACjBE,MAAAA,cAAc;AACf,KAHa,CAId;;AACD,GALQ,EAKN,CAACE,QAAD,CALM,CAAT;;AAOA,QAAME,aAAa,gBACjB,QAAC,SAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,MAAM,EAAE,CADN;AAEF,8BAAwB;AAAEA,QAAAA,MAAM,EAAE,CAAV;AAAanB,QAAAA,OAAO,EAAE,MAAtB;AAA8BoB,QAAAA,aAAa,EAAE;AAA7C;AAFtB,KADN;AAAA,4BAME,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,EAAE,EAAE,CAAf;AAAkBtB,QAAAA,OAAO,EAAE;AAA3B,OAAT;AAAA,6BACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAUE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAET;AAAvB;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;;AAeA,sBACE,QAAC,SAAD;AAAA,eACG,CAAC0B,SAAD,iBACC,QAAC,MAAD;AACE,MAAA,IAAI,EAAEL,aADR;AAEE,MAAA,OAAO,EAAEE,cAFX;AAGE,MAAA,UAAU,EAAE;AACVS,QAAAA,EAAE,EAAE;AAAEzB,UAAAA,KAAK,EAAEN;AAAT;AADM,OAHd;AAAA,gBAOG0B;AAPH;AAAA;AAAA;AAAA;AAAA,YAFJ,EAaGD,SAAS,iBACR,QAAC,MAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,OAAO,EAAC,YAFV;AAGE,MAAA,UAAU,EAAE;AACVM,QAAAA,EAAE,EAAE;AACFzB,UAAAA,KAAK,EAAEN,YADL;AAEFgC,UAAAA,OAAO,EAAE,oBAFP;AAGFC,UAAAA,gBAAgB,EAAE;AAHhB;AADM,OAHd;AAAA,gBAWGP;AAXH;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GA1DuBR,gB;UACDhC,W,EAEHS,a;;;KAHIuB,gB","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\n// mocks_\nimport account from '../../_mocks_/account';\n// hooks\nimport useResponsive from '../../hooks/useResponsive';\n// components\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection';\n//\nimport sidebarConfig from './SidebarConfig';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    width: DRAWER_WIDTH\n  }\n}));\n\nconst AccountStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 2.5),\n  borderRadius: Number(theme.shape.borderRadius) * 1.5,\n  backgroundColor: theme.palette.grey[500_12]\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\n\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }) {\n  const { pathname } = useLocation();\n\n  const isDesktop = useResponsive('up', 'lg');\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [pathname]);\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: 1,\n        '& .simplebar-content': { height: 1, display: 'flex', flexDirection: 'column' }\n      }}\n    >\n      <Box sx={{ px: 2.5, py: 3, display: 'inline-flex' }}>\n        <Logo />\n      </Box>\n\n      <NavSection navConfig={sidebarConfig} />\n    </Scrollbar>\n  );\n\n  return (\n    <RootStyle>\n      {!isDesktop && (\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          PaperProps={{\n            sx: { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n\n      {isDesktop && (\n        <Drawer\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: DRAWER_WIDTH,\n              bgcolor: 'background.default',\n              borderRightStyle: 'dashed'\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      )}\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}